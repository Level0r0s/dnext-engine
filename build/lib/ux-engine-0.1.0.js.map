{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/UX/App.js","src/UX/Button.js","src/UX/Label.js","src/UX/Labeled.js","src/UX/Node.js","src/UX/Page.js","src/UX/Pane.js","src/UX/common/ObservableList.js","src/lib.js"],"names":[],"mappings":"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","file":"ux-engine-0.1.0.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\r\nclass App {\r\n    constructor(domElement) {\r\n      this.root = jQuery(domElement);\r\n    }\r\n\r\n    show(page) {\r\n      this.root.html('');\r\n      this.root.append(page.dom);\r\n    }\r\n}\r\n","import Labeled from './Labeled';\r\n\r\nclass Button extends Labeled {\r\n    \r\n    createDom() {\r\n        var dom = jQuery('<button></button>');\r\n        dom.addClass('btn');\r\n        dom.addClass('btn-default');\r\n\r\n        return dom;\r\n    }\r\n}\r\n\r\nexport default Button;\r\n","import Labeled from './Labeled';\r\n\r\n\r\nclass Label extends Labeled {\r\n\r\n  createDom() {\r\n      var dom = jQuery('<span></span>');\r\n      dom.addClass('label');\r\n      return dom;\r\n  }\r\n}\r\n","import Node from './Node';\r\n\r\nclass Labeled extends Node {\r\n    constructor(text) {\r\n        super();\r\n        this.text = text;\r\n    }\r\n\r\n    get text() {\r\n        return this.dom.text();\r\n    }\r\n\r\n    set text(value) {\r\n        this.dom.text(value);\r\n    }\r\n}\r\n\r\nexport default Labeled;\r\n","\r\n/**\r\n * Base HTML Node class.\r\n **/\r\nclass Node {\r\n    constructor(dom) {\r\n        if (dom === undefined) {\r\n            this.dom = this.createDom();\r\n\r\n            if (!(this.dom instanceof jQuery)) {\r\n                throw new Error(\"Method createDom() must return instance of an jQuery object\");\r\n            }\r\n        } else {\r\n            if (dom instanceof jQuery) {\r\n                this.dom = dom;\r\n            } else {\r\n                throw new Error(\"Non-jquery object cannot be passed into Node.construct()\");\r\n            }\r\n        }\r\n\r\n        this.dom.data('--wrapper', this);\r\n    }\r\n\r\n    get id() { return this.dom.attr('id') }\r\n    set id(value) { this.dom.attr('id', value) }\r\n\r\n    get style() { return this.dom.attr('style') }\r\n    set style(value) { this.dom.attr('style', value) }\r\n\r\n    get x() { return this.dom.position().left; }\r\n    set x(value) { this.dom.css({left: value}); }\r\n\r\n    get y() { return this.dom.position().top; }\r\n    set y(value) {\r\n        this.dom.css({top: value});\r\n    }\r\n\r\n    get position() { return [this.x, this.y]; }\r\n    set position(value) {\r\n        if (value instanceof Array && value.length >= 2) {\r\n            this.x = value[0];\r\n            this.y = value[1];\r\n        }\r\n    }\r\n\r\n    get width() { return this.dom.width() }\r\n    set width(value) { this.dom.width(value) }\r\n\r\n    get height() { return this.dom.height() }\r\n    set height(value) { this.dom.height(value) }\r\n\r\n    get size() { return [this.width, this.height] }\r\n    set size(value) {\r\n        if (value instanceof Array && value.length >= 2) {\r\n            this.width = value[0];\r\n            this.height = value[1];\r\n        }\r\n    }\r\n\r\n    get parent() {\r\n        return Node.getFromDom(this.dom.parent());\r\n    }\r\n\r\n    createDom() {\r\n        throw new Error(\"Cannot call abstract method createDom()\");\r\n    }\r\n\r\n    lookup(selector) {\r\n      var dom = this.dom.find(selector).first();\r\n\r\n      if (dom.length()) {\r\n        return Node.getFromDom(dom);\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    lookupAll(selector) {\r\n      var nodes = [];\r\n\r\n      this.dom.find(selector).each(() => {\r\n        nodes.push(Node.getFromDom(this));\r\n      });\r\n\r\n      return nodes;\r\n    }\r\n\r\n    free() {\r\n        this.dom.detach();\r\n    }\r\n\r\n    on(event, callback) {\r\n        this.dom.on(event, callback);\r\n    }\r\n\r\n    off(event) {\r\n        this.dom.off(event);\r\n    }\r\n\r\n    trigger(event, params) {\r\n        this.dom.trigger(event, params);\r\n    }\r\n\r\n    static getFromDom(jqueryObject) {\r\n        if (jqueryObject === null) {\r\n            return null;\r\n        }\r\n\r\n        if (jqueryObject instanceof jQuery) {\r\n            var wrapper =  jqueryObject.data('--wrapper');\r\n            return wrapper ? wrapper : new Node(jqueryObject);\r\n        }\r\n\r\n        throw new Error(\"Node.getFromDom(): 1 argument must be an jQuery object\");\r\n    }\r\n}\r\n\r\nexport default Node;\r\n","import Pane from './Pane';\r\n\r\nclass Page extends Pane {\r\n  constructor(nodes) {\r\n      super(nodes);\r\n  }\r\n}\r\n","import Node from \"./Node\";\r\nimport ObservableList from \"./common/ObservableList\";\r\n\r\nclass Pane extends Node {\r\n    constructor(nodes) {\r\n        super();\r\n\r\n        this.__children = new ObservableList();\r\n        this.__children.addListener((object, action) => {\r\n            switch (action) {\r\n                case 'clear':\r\n                    this.dom.html('');\r\n                    break;\r\n\r\n                case 'add':\r\n                    console.log(object);\r\n                    this.dom.append(this.createSlotDom(object));\r\n                    break;\r\n\r\n                case 'remove':\r\n                    var slot = object.dom.data('--slot-dom');\r\n\r\n                    if (slot instanceof jQuery) {\r\n                        object.data('--slot-dom', null);\r\n                        slot.remove();\r\n                    } else {\r\n                        object.free();\r\n                    }\r\n\r\n                    break;\r\n            }\r\n        });\r\n\r\n        this.add(arguments);\r\n    }\r\n\r\n    get children() {\r\n        return this.__children;\r\n    }\r\n\r\n    createSlotDom(object) {\r\n        var dom = jQuery('<div/>').append(object.dom);\r\n        dom.data('--wrapper', object);\r\n        object.dom.data('--slot-dom', dom);\r\n        return dom;\r\n    }\r\n\r\n    createDom() {\r\n        var dom = jQuery('<div></div>');\r\n        return dom;\r\n    }\r\n\r\n    add(nodes) {\r\n        this.children.add(...arguments);\r\n    }\r\n\r\n    remove(nodes) {\r\n        this.children.remove(...arguments);\r\n    }\r\n\r\n    clear() {\r\n        this.children.clear();\r\n    }\r\n}\r\n\r\nexport default Pane;\r\n","class ObservableList {\r\n    constructor() {\r\n        this._list = [];\r\n        this._callbacks = [];\r\n    }\r\n\r\n    _callListeners(arg, group) {\r\n        for (var i = 0; i < this._callbacks.length; i++) {\r\n            this._callbacks[i].call(this, arg, group);\r\n        }\r\n    }\r\n\r\n    get count() {\r\n        return this._list.length;\r\n    }\r\n\r\n    count() {\r\n        return this._list.length;\r\n    }\r\n\r\n    clear() {\r\n        this._list = [];\r\n        this._callListeners(null, 'clear');\r\n    }\r\n\r\n    add(objects) {\r\n        for (var i = 0; i < arguments.length; i++) {\r\n            this._list.push(arguments[i]);\r\n            this._callListeners(arguments[i], 'add');\r\n        }\r\n    }\r\n\r\n    remove(objects) {\r\n        for (var i = 0; i < arguments.length; i++) {\r\n            var object = this._list[index];\r\n            var index  = this._list.indexOf(object);\r\n\r\n            if (index > -1) {\r\n                delete this._list[index];\r\n\r\n                this._callListeners(object, 'remove');\r\n            }\r\n        }\r\n    }\r\n\r\n    removeByIndex(index) {\r\n        if (index >= 0 && index <= this._list.length - 1) {\r\n            delete this._list[index];\r\n        }\r\n    }\r\n\r\n    addListener(callback) {\r\n        this._callbacks.push(callback);\r\n    }\r\n}\r\n\r\n\r\nexport default ObservableList;\r\n","import App from './UX/App';\r\nimport Node from './UX/Node';\r\nimport Button from './UX/Button';\r\nimport Labeled from './UX/Labeled';\r\nimport Label from './UX/Label';\r\nimport Pane from './UX/Pane';\r\nimport Page from './UX/Page';\r\n\r\nwindow.UX = {\r\n  App, Node, Button, Labeled, Label, Pane, Page\r\n}\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmNcXFVYXFxBcHAuanMiLCJzcmNcXFVYXFxCdXR0b24uanMiLCJzcmNcXFVYXFxMYWJlbC5qcyIsInNyY1xcVVhcXExhYmVsZWQuanMiLCJzcmNcXFVYXFxOb2RlLmpzIiwic3JjXFxVWFxcUGFnZS5qcyIsInNyY1xcVVhcXFBhbmUuanMiLCJzcmNcXFVYXFxjb21tb25cXE9ic2VydmFibGVMaXN0LmpzIiwic3JjXFxsaWIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7SUNDTSxHO0FBQ0YsZUFBWSxVQUFaLEVBQXdCO0FBQUE7O0FBQ3RCLFNBQUssSUFBTCxHQUFZLE9BQU8sVUFBUCxDQUFaO0FBQ0Q7Ozs7eUJBRUksSSxFQUFNO0FBQ1QsV0FBSyxJQUFMLENBQVUsSUFBVixDQUFlLEVBQWY7QUFDQSxXQUFLLElBQUwsQ0FBVSxNQUFWLENBQWlCLEtBQUssR0FBdEI7QUFDRDs7Ozs7Ozs7Ozs7Ozs7O0FDVEw7Ozs7Ozs7Ozs7OztJQUVNLE07Ozs7Ozs7Ozs7O29DQUVVO0FBQ1IsZ0JBQUksTUFBTSxPQUFPLG1CQUFQLENBQVY7QUFDQSxnQkFBSSxRQUFKLENBQWEsS0FBYjtBQUNBLGdCQUFJLFFBQUosQ0FBYSxhQUFiOztBQUVBLG1CQUFPLEdBQVA7QUFDSDs7Ozs7O2tCQUdVLE07Ozs7Ozs7QUNiZjs7Ozs7Ozs7Ozs7O0lBR00sSzs7Ozs7Ozs7Ozs7b0NBRVE7QUFDUixnQkFBSSxNQUFNLE9BQU8sZUFBUCxDQUFWO0FBQ0EsZ0JBQUksUUFBSixDQUFhLE9BQWI7QUFDQSxtQkFBTyxHQUFQO0FBQ0g7Ozs7Ozs7Ozs7Ozs7OztBQ1RIOzs7Ozs7Ozs7Ozs7SUFFTSxPOzs7QUFDRixxQkFBWSxJQUFaLEVBQWtCO0FBQUE7O0FBQUE7O0FBRWQsY0FBSyxJQUFMLEdBQVksSUFBWjtBQUZjO0FBR2pCOzs7OzRCQUVVO0FBQ1AsbUJBQU8sS0FBSyxHQUFMLENBQVMs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QVgsQ0FBYjtBQUNBLG9CQUFJLFFBQVMsS0FBSyxLQUFMLENBQVcsT0FBWCxDQUFtQixNQUFuQixDQUFiOztBQUVBLG9CQUFJLFFBQVEsQ0FBQyxDQUFiLEVBQWdCO0FBQ1osMkJBQU8sS0FBSyxLQUFMLENBQVcsS0FBWCxDQUFQOztBQUVBLHlCQUFLLGNBQUwsQ0FBb0IsTUFBcEIsRUFBNEIsUUFBNUI7QUFDSDtBQUNKO0FBQ0o7OztzQ0FFYSxLLEVBQU87QUFDakIsZ0JBQUksU0FBUyxDQUFULElBQWMsU0FBUyxLQUFLLEtBQUwsQ0FBVyxNQUFYLEdBQW9CLENBQS9DLEVBQWtEO0FBQzlDLHVCQUFPLEtBQUssS0FBTCxDQUFXLEtBQVgsQ0FBUDtBQUNIO0FBQ0o7OztvQ0FFVyxRLEVBQVU7QUFDbEIsaUJBQUssVUFBTCxDQUFnQixJQUFoQixDQUFxQixRQUFyQjtBQUNIOzs7NEJBekNXO0FBQ1IsbUJBQU8sS0FBSyxLQUFMLENBQVcsTUFBbEI7QUFDSDs7Ozs7O2tCQTJDVSxjOzs7OztBQ3pEZjs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7O0FBRUEsT0FBTyxFQUFQLEdBQVk7QUFDVixvQkFEVSxFQUNMLG9CQURLLEVBQ0Msd0JBREQsRUFDUywwQkFEVCxFQUNrQixzQkFEbEIsRUFDeUIsb0JBRHpCLEVBQytCO0FBRC9CLENBQVoiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiXHJcbmNsYXNzIEFwcCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihkb21FbGVtZW50KSB7XHJcbiAgICAgIHRoaXMucm9vdCA9IGpRdWVyeShkb21FbGVtZW50KTtcclxuICAgIH1cclxuXHJcbiAgICBzaG93KHBhZ2UpIHtcclxuICAgICAgdGhpcy5yb290Lmh0bWwoJycpO1xyXG4gICAgICB0aGlzLnJvb3QuYXBwZW5kKHBhZ2UuZG9tKTtcclxuICAgIH1cclxufVxyXG4iLCJpbXBvcnQgTGFiZWxlZCBmcm9tICcuL0xhYmVsZWQnO1xyXG5cclxuY2xhc3MgQnV0dG9uIGV4dGVuZHMgTGFiZWxlZCB7XHJcbiAgICBcclxuICAgIGNyZWF0ZURvbSgpIHtcclxuICAgICAgICB2YXIgZG9tID0galF1ZXJ5KCc8YnV0dG9uPjwvYnV0dG9uPicpO1xyXG4gICAgICAgIGRvbS5hZGRDbGFzcygnYnRuJyk7XHJcbiAgICAgICAgZG9tLmFkZENsYXNzKCdidG4tZGVmYXVsdCcpO1xyXG5cclxuICAgICAgICByZXR1cm4gZG9tO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBCdXR0b247XHJcbiIsImltcG9ydCBMYWJlbGVkIGZyb20gJy4vTGFiZWxlZCc7XHJcblxyXG5cclxuY2xhc3MgTGFiZWwgZXh0ZW5kcyBMYWJlbGVkIHtcclxuXHJcbiAgY3JlYXRlRG9tKCkge1xyXG4gICAgICB2YXIgZG9tID0galF1ZXJ5KCc8c3Bhbj48L3NwYW4+Jyk7XHJcbiAgICAgIGRvbS5hZGRDbGFzcygnbGFiZWwnKTtcclxuICAgICAgcmV0dXJuIGRvbTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IE5vZGUgZnJvbSAnLi9Ob2RlJztcclxuXHJcbmNsYXNzIExhYmVsZWQgZXh0ZW5kcyBOb2RlIHtcclxuICAgIGNvbnN0cnVjdG9yKHRleHQpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMudGV4dCA9IHRleHQ7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IHRleHQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZG9tLnRleHQoKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXQgdGV4dCh2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuZG9tLnRleHQodmFsdWUpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBMYWJlbGVkO1xyXG4iLCJcclxuLyoqXHJcbiAqIEJhc2UgSFRNTCBOb2RlIGNsYXNzLlxyXG4gKiovXHJcbmNsYXNzIE5vZGUge1xyXG4gICAgY29uc3RydWN0b3IoZG9tKSB7XHJcbiAgICAgICAgaWYgKGRvbSA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZG9tID0gdGhpcy5jcmVhdGVEb20oKTtcclxuXHJcbiAgICAgICAgICAgIGlmICghKHRoaXMuZG9tIGluc3RhbmNlb2YgalF1ZXJ5KSkge1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWV0aG9kIGNyZWF0ZURvbSgpIG11c3QgcmV0dXJuIGluc3RhbmNlIG9mIGFuIGpRdWVyeSBvYmplY3RcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAoZG9tIGluc3RhbmNlb2YgalF1ZXJ5KSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmRvbSA9IGRvbTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vbi1qcXVlcnkgb2JqZWN0IGNhbm5vdCBiZSBwYXNzZWQgaW50byBOb2RlLmNvbnN0cnVjdCgpXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLmRvbS5kYXRhKCctLXdyYXBwZXInLCB0aGlzKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgaWQoKSB7IHJldHVybiB0aGlzLmRvbS5hdHRyKCdpZCcpIH1cclxuICAgIHNldCBpZCh2YWx1ZSkgeyB0aGlzLmRvbS5hdHRyKCdpZCcsIHZhbHVlKSB9XHJcblxyXG4gICAgZ2V0IHN0eWxlKCkgeyByZXR1cm4gdGhpcy5kb20uYXR0cignc3R5bGUnKSB9XHJcbiAgICBzZXQgc3R5bGUodmFsdWUpIHsgdGhpcy5kb20uYXR0cignc3R5bGUnLCB2YWx1ZSkgfVxyXG5cclxuICAgIGdldCB4KCkgeyByZXR1cm4gdGhpcy5kb20ucG9zaXRpb24oKS5sZWZ0OyB9XHJcbiAgICBzZXQgeCh2YWx1ZSkgeyB0aGlzLmRvbS5jc3Moe2xlZnQ6IHZhbHVlfSk7IH1cclxuXHJcbiAgICBnZXQgeSgpIHsgcmV0dXJuIHRoaXMuZG9tLnBvc2l0aW9uKCkudG9wOyB9XHJcbiAgICBzZXQgeSh2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuZG9tLmNzcyh7dG9wOiB2YWx1ZX0pO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBwb3NpdGlvbigpIHsgcmV0dXJuIFt0aGlzLngsIHRoaXMueV07IH1cclxuICAgIHNldCBwb3NpdGlvbih2YWx1ZSkge1xyXG4gICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFycmF5ICYmIHZhbHVlLmxlbmd0aCA+PSAyKSB7XHJcbiAgICAgICAgICAgIHRoaXMueCA9IHZhbHVlWzBdO1xyXG4gICAgICAgICAgICB0aGlzLnkgPSB2YWx1ZVsxXTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IHdpZHRoKCkgeyByZXR1cm4gdGhpcy5kb20ud2lkdGgoKSB9XHJcbiAgICBzZXQgd2lkdGgodmFsdWUpIHsgdGhpcy5kb20ud2lkdGgodmFsdWUpIH1cclxuXHJcbiAgICBnZXQgaGVpZ2h0KCkgeyByZXR1cm4gdGhpcy5kb20uaGVpZ2h0KCkgfVxyXG4gICAgc2V0IGhlaWdodCh2YWx1ZSkgeyB0aGlzLmRvbS5oZWlnaHQodmFsdWUpIH1cclxuXHJcbiAgICBnZXQgc2l6ZSgpIHsgcmV0dXJuIFt0aGlzLndpZHRoLCB0aGlzLmhlaWdodF0gfVxyXG4gICAgc2V0IHNpemUodmFsdWUpIHtcclxuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBcnJheSAmJiB2YWx1ZS5sZW5ndGggPj0gMikge1xyXG4gICAgICAgICAgICB0aGlzLndpZHRoID0gdmFsdWVbMF07XHJcbiAgICAgICAgICAgIHRoaXMuaGVpZ2h0ID0gdmFsdWVbMV07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGdldCBwYXJlbnQoKSB7XHJcbiAgICAgICAgcmV0dXJuIE5vZGUuZ2V0RnJvbURvbSh0aGlzLmRvbS5wYXJlbnQoKSk7XHJcbiAgICB9XHJcblxyXG4gICAgY3JlYXRlRG9tKCkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBjYWxsIGFic3RyYWN0IG1ldGhvZCBjcmVhdGVEb20oKVwiKTtcclxuICAgIH1cclxuXHJcbiAgICBsb29rdXAoc2VsZWN0b3IpIHtcclxuICAgICAgdmFyIGRvbSA9IHRoaXMuZG9tLmZpbmQoc2VsZWN0b3IpLmZpcnN0KCk7XHJcblxyXG4gICAgICBpZiAoZG9tLmxlbmd0aCgpKSB7XHJcbiAgICAgICAgcmV0dXJuIE5vZGUuZ2V0RnJvbURvbShkb20pO1xyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBsb29rdXBBbGwoc2VsZWN0b3IpIHtcclxuICAgICAgdmFyIG5vZGVzID0gW107XHJcblxyXG4gICAgICB0aGlzLmRvbS5maW5kKHNlbGVjdG9yKS5lYWNoKCgpID0+IHtcclxuICAgICAgICBub2Rlcy5wdXNoKE5vZGUuZ2V0RnJvbURvbSh0aGlzKSk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgcmV0dXJuIG5vZGVzO1xyXG4gICAgfVxyXG5cclxuICAgIGZyZWUoKSB7XHJcbiAgICAgICAgdGhpcy5kb20uZGV0YWNoKCk7XHJcbiAgICB9XHJcblxyXG4gICAgb24oZXZlbnQsIGNhbGxiYWNrKSB7XHJcbiAgICAgICAgdGhpcy5kb20ub24oZXZlbnQsIGNhbGxiYWNrKTtcclxuICAgIH1cclxuXHJcbiAgICBvZmYoZXZlbnQpIHtcclxuICAgICAgICB0aGlzLmRvbS5vZmYoZXZlbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIHRyaWdnZXIoZXZlbnQsIHBhcmFtcykge1xyXG4gICAgICAgIHRoaXMuZG9tLnRyaWdnZXIoZXZlbnQsIHBhcmFtcyk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGdldEZyb21Eb20oanF1ZXJ5T2JqZWN0KSB7XHJcbiAgICAgICAgaWYgKGpxdWVyeU9iamVjdCA9PT0gbnVsbCkge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChqcXVlcnlPYmplY3QgaW5zdGFuY2VvZiBqUXVlcnkpIHtcclxuICAgICAgICAgICAgdmFyIHdyYXBwZXIgPSAganF1ZXJ5T2JqZWN0LmRhdGEoJy0td3JhcHBlcicpO1xyXG4gICAgICAgICAgICByZXR1cm4gd3JhcHBlciA/IHdyYXBwZXIgOiBuZXcgTm9kZShqcXVlcnlPYmplY3QpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm9kZS5nZXRGcm9tRG9tKCk6IDEgYXJndW1lbnQgbXVzdCBiZSBhbiBqUXVlcnkgb2JqZWN0XCIpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBOb2RlO1xyXG4iLCJpbXBvcnQgUGFuZSBmcm9tICcuL1BhbmUnO1xyXG5cclxuY2xhc3MgUGFnZSBleHRlbmRzIFBhbmUge1xyXG4gIGNvbnN0cnVjdG9yKG5vZGVzKSB7XHJcbiAgICAgIHN1cGVyKG5vZGVzKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IE5vZGUgZnJvbSBcIi4vTm9kZVwiO1xyXG5pbXBvcnQgT2JzZXJ2YWJsZUxpc3QgZnJvbSBcIi4vY29tbW9uL09ic2VydmFibGVMaXN0XCI7XHJcblxyXG5jbGFzcyBQYW5lIGV4dGVuZHMgTm9kZSB7XHJcbiAgICBjb25zdHJ1Y3Rvcihub2Rlcykge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcblxyXG4gICAgICAgIHRoaXMuX19jaGlsZHJlbiA9IG5ldyBPYnNlcnZhYmxlTGlzdCgpO1xyXG4gICAgICAgIHRoaXMuX19jaGlsZHJlbi5hZGRMaXN0ZW5lcigob2JqZWN0LCBhY3Rpb24pID0+IHtcclxuICAgICAgICAgICAgc3dpdGNoIChhY3Rpb24pIHtcclxuICAgICAgICAgICAgICAgIGNhc2UgJ2NsZWFyJzpcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmRvbS5odG1sKCcnKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAgICAgICBjYXNlICdhZGQnOlxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKG9iamVjdCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kb20uYXBwZW5kKHRoaXMuY3JlYXRlU2xvdERvbShvYmplY3QpKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAgICAgICBjYXNlICdyZW1vdmUnOlxyXG4gICAgICAgICAgICAgICAgICAgIHZhciBzbG90ID0gb2JqZWN0LmRvbS5kYXRhKCctLXNsb3QtZG9tJyk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChzbG90IGluc3RhbmNlb2YgalF1ZXJ5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9iamVjdC5kYXRhKCctLXNsb3QtZG9tJywgbnVsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNsb3QucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgb2JqZWN0LmZyZWUoKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMuYWRkKGFyZ3VtZW50cyk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9fY2hpbGRyZW47XHJcbiAgICB9XHJcblxyXG4gICAgY3JlYXRlU2xvdERvbShvYmplY3QpIHtcclxuICAgICAgICB2YXIgZG9tID0galF1ZXJ5KCc8ZGl2Lz4nKS5hcHBlbmQob2JqZWN0LmRvbSk7XHJcbiAgICAgICAgZG9tLmRhdGEoJy0td3JhcHBlcicsIG9iamVjdCk7XHJcbiAgICAgICAgb2JqZWN0LmRvbS5kYXRhKCctLXNsb3QtZG9tJywgZG9tKTtcclxuICAgICAgICByZXR1cm4gZG9tO1xyXG4gICAgfVxyXG5cclxuICAgIGNyZWF0ZURvbSgpIHtcclxuICAgICAgICB2YXIgZG9tID0galF1ZXJ5KCc8ZGl2PjwvZGl2PicpO1xyXG4gICAgICAgIHJldHVybiBkb207XHJcbiAgICB9XHJcblxyXG4gICAgYWRkKG5vZGVzKSB7XHJcbiAgICAgICAgdGhpcy5jaGlsZHJlbi5hZGQoLi4uYXJndW1lbnRzKTtcclxuICAgIH1cclxuXHJcbiAgICByZW1vdmUobm9kZXMpIHtcclxuICAgICAgICB0aGlzLmNoaWxkcmVuLnJlbW92ZSguLi5hcmd1bWVudHMpO1xyXG4gICAgfVxyXG5cclxuICAgIGNsZWFyKCkge1xyXG4gICAgICAgIHRoaXMuY2hpbGRyZW4uY2xlYXIoKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgUGFuZTtcclxuIiwiY2xhc3MgT2JzZXJ2YWJsZUxpc3Qge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgdGhpcy5fbGlzdCA9IFtdO1xyXG4gICAgICAgIHRoaXMuX2NhbGxiYWNrcyA9IFtdO1xyXG4gICAgfVxyXG5cclxuICAgIF9jYWxsTGlzdGVuZXJzKGFyZywgZ3JvdXApIHtcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuX2NhbGxiYWNrcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICB0aGlzLl9jYWxsYmFja3NbaV0uY2FsbCh0aGlzLCBhcmcsIGdyb3VwKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGNvdW50KCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9saXN0Lmxlbmd0aDtcclxuICAgIH1cclxuXHJcbiAgICBjb3VudCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbGlzdC5sZW5ndGg7XHJcbiAgICB9XHJcblxyXG4gICAgY2xlYXIoKSB7XHJcbiAgICAgICAgdGhpcy5fbGlzdCA9IFtdO1xyXG4gICAgICAgIHRoaXMuX2NhbGxMaXN0ZW5lcnMobnVsbCwgJ2NsZWFyJyk7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkKG9iamVjdHMpIHtcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICB0aGlzLl9saXN0LnB1c2goYXJndW1lbnRzW2ldKTtcclxuICAgICAgICAgICAgdGhpcy5fY2FsbExpc3RlbmVycyhhcmd1bWVudHNbaV0sICdhZGQnKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmVtb3ZlKG9iamVjdHMpIHtcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICB2YXIgb2JqZWN0ID0gdGhpcy5fbGlzdFtpbmRleF07XHJcbiAgICAgICAgICAgIHZhciBpbmRleCAgPSB0aGlzLl9saXN0LmluZGV4T2Yob2JqZWN0KTtcclxuXHJcbiAgICAgICAgICAgIGlmIChpbmRleCA+IC0xKSB7XHJcbiAgICAgICAgICAgICAgICBkZWxldGUgdGhpcy5fbGlzdFtpbmRleF07XHJcblxyXG4gICAgICAgICAgICAgICAgdGhpcy5fY2FsbExpc3RlbmVycyhvYmplY3QsICdyZW1vdmUnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZW1vdmVCeUluZGV4KGluZGV4KSB7XHJcbiAgICAgICAgaWYgKGluZGV4ID49IDAgJiYgaW5kZXggPD0gdGhpcy5fbGlzdC5sZW5ndGggLSAxKSB7XHJcbiAgICAgICAgICAgIGRlbGV0ZSB0aGlzLl9saXN0W2luZGV4XTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgYWRkTGlzdGVuZXIoY2FsbGJhY2spIHtcclxuICAgICAgICB0aGlzLl9jYWxsYmFja3MucHVzaChjYWxsYmFjayk7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBPYnNlcnZhYmxlTGlzdDtcclxuIiwiaW1wb3J0IEFwcCBmcm9tICcuL1VYL0FwcCc7XHJcbmltcG9ydCBOb2RlIGZyb20gJy4vVVgvTm9kZSc7XHJcbmltcG9ydCBCdXR0b24gZnJvbSAnLi9VWC9CdXR0b24nO1xyXG5pbXBvcnQgTGFiZWxlZCBmcm9tICcuL1VYL0xhYmVsZWQnO1xyXG5pbXBvcnQgTGFiZWwgZnJvbSAnLi9VWC9MYWJlbCc7XHJcbmltcG9ydCBQYW5lIGZyb20gJy4vVVgvUGFuZSc7XHJcbmltcG9ydCBQYWdlIGZyb20gJy4vVVgvUGFnZSc7XHJcblxyXG53aW5kb3cuVVggPSB7XHJcbiAgQXBwLCBOb2RlLCBCdXR0b24sIExhYmVsZWQsIExhYmVsLCBQYW5lLCBQYWdlXHJcbn1cclxuIl19"}